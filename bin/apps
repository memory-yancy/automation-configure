#!/bin/bash

shopt -s nullglob

check_file_validate()
{
    local check_file="$1"
    local contents=$(grep -v -e "^#" -e "^$" "$check_file")

    [[ "$contents" ]] || {
        log_error "$check_file file has no any contents and please check it ..."
        return 1
    }
}

check_update_repo()
{
    log_info "checking update repo whether enable or not"

    if yum repolist enabled | grep -q "Updates"; then
        log_warn "disable Updates repo is better in some way"
    fi
}

rpm_install()
{
    local third_party_file="${OS_CONFIG_SRC}/config/pkgs/pkgs_third.ini"
    check_files_exist "$third_party_file" || return
    check_file_validate "$third_party_file" || return

    local line_content
    line_content=$(get_value_from_inifile "$third_party_file" "third_party_pkgs" | sed '/^$/d') || return

    local pkgs_urls=$(echo "$line_content" | awk -F"=" '{print $NF}')
    while read -r line; do
        [[ "$line" =~ ^http.*rpm$ ]] || {
            log_warn "$line is not a valid URL or RPM package, skip it ..."
            continue
        }

        local pkg_name=$(basename "$line")
        log_info "downloading $pkg_name package from Internet ..."
        if curl -L -s -S -# -k -o "${TEMP_DIRS}/${pkg_name}" "$line"; then
            # Resolve RPM package dependencies: https://stackoverflow.com/questions/13876875/how-to-make-rpm-auto-install-dependencies
            yum --nogpgcheck localinstall "$TEMP_DIRS/$pkg_name" -y > /dev/null || {
                log_warn "please resove dependencies manually and then reinstall $pkg_name ..."
                return 1
            }
        else
            log_warn "can not download package $pkg_name from $line ..."
            continue
        fi
    done <<< "$pkgs_urls"
}

yum_install()
{
    if grep -i -q "^ID.*centos" /etc/os-release; then
        log_info "installing epel-release and centos-release-scl ..."
        yum install -y epel-release.noarch centos-release-scl.noarch > /dev/null || {
            log_error "cannot install epel-release and centos-release-scl ..."
            return 1
        }
    fi
    log_info "installing Development Tools component ..."
    yum groups install "Development Tools" -y > /dev/null || {
        log_error "cannot installing Development Tools component ..."
        return 1
    }

    local pkgs_name_file="${OS_CONFIG_SRC}/config/pkgs/pkgs_name.ini"
    local line_content
    line_content=$(get_value_from_inifile "$pkgs_name_file" "install_pkgs" | sed '/^$/d') || return

    while read -r pkg_name; do
        log_info "installing $pkg_name ..."
        yum install -y --nogpgcheck "$pkg_name" > /dev/null || {
            log_error "cannot to install $pkg_name ..."
            return 1
        }
    done <<< "$line_content"
}

enable_service()
{
    local pkgs_name_file="${OS_CONFIG_SRC}/config/pkgs/pkgs_name.ini"
    local line_content
    line_content=$(get_value_from_inifile "$pkgs_name_file" "enable_service_pkgs" | sed '/^$/d') || return

    while read -r service_name; do
        enable_start_service "$service_name" || return
    done <<< "$line_content"
}

clean_tmp()
{
    rm -rf "$TEMP_DIRS"
}

[[ $(id -u) -eq 0 ]] || {
    log_error "please use root privilege to run it again."
    exit 1
}

trap "clean_tmp; exit 1" EXIT INT
TEMP_DIRS=$(mktemp -d -p "$OS_CONFIG_SRC")

check_update_repo
yum_install || exit
rpm_install || exit
# enable_service || exit
